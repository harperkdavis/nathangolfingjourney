{"mappings":"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","sources":["shared.js"],"sourcesContent":["class Ball {\n\n    constructor(id) {\n        this.id = id;\n\n        this.name = \"Ball\";\n        this.level = 0;\n\n        this.color = [0, 0, 0];\n        \n        this.x = 0;\n        this.y = 0;\n        this.xv = 0;\n        this.yv = 0;\n\n        this.rotation = 0;\n\n        this.trans = -1;\n        this.onTee = false;\n\n        this.wasReset = false;\n        this.lastChat = -10000000000;\n\n        this.tpTick = -1;\n        \n        this.canStroke = false;\n        \n        this.health = 100;\n        this.score = 0;\n        this.time = 0;\n        this.clears = new Array(100).fill([Infinity, Infinity]);\n\n        this.aiming = false;\n\n        this.aimX = 0;\n        this.aimY = 0;\n        this.aimVelX = 0;\n        this.aimVelY = 0;\n\n        this.aimPower = 0;\n    }\n\n}\n\nclass Level {\n    \n    constructor(id, x, points, holeX, holeY) {\n        this.id = id;\n        this.x = x;\n\n        this.holeX = holeX;\n        this.holeY = holeY;\n\n        this.points = points;\n\n        this.width = -99999999\n        for (let point of points) {\n            this.width = Math.max(this.width, point.x);\n        }\n    }\n\n}\n\nfunction isWithin(x, y, x1, y1, w, h) {\n    return x > x1 && y > y1 && x < x1 + w && y < y1 + w;\n}\n\n// https://observablehq.com/@bumbeishvili/two-unlimited-lines-intersection-in-javascript\nfunction intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n    // Check if none of the lines are of length 0\n    if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n        return false\n    }\n\n    const denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1))\n\n    // Lines are parallel\n    if (denominator === 0) {\n        return false\n    }\n\n    let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\n    let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\n\n    // Return a object with the x and y coordinates of the intersection\n    let x = x1 + ua * (x2 - x1)\n    let y = y1 + ua * (y2 - y1)\n\n    return { x, y }\n}\n\nfunction intersectPoint(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n    // Check if none of the lines are of length 0\n      if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n          return false\n      }\n  \n      denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1))\n  \n    // Lines are parallel\n      if (denominator === 0) {\n          return false\n      }\n  \n      let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\n      let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\n  \n    // is the intersection along the segments\n      if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n          return false\n      }\n  \n    // Return a object with the x and y coordinates of the intersection\n      let x = x1 + ua * (x2 - x1)\n      let y = y1 + ua * (y2 - y1)\n  \n      return {x, y}\n  }\n\n// https://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction distToSegment(p, v, w) { function sqr(x) { return x * x }\nfunction dist2(v, w) { return sqr(v.x - w.x) + sqr(v.y - w.y) }\nfunction distToSegmentSquared(p, v, w) {\n  var l2 = dist2(v, w);\n  if (l2 == 0) return dist2(p, v);\n  var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n  t = Math.max(0, Math.min(1, t));\n  return dist2(p, { x: v.x + t * (w.x - v.x),\n                    y: v.y + t * (w.y - v.y) });\n} return Math.sqrt(distToSegmentSquared(p, v, w)); }\n\ntry {\n    module.exports = {\n        Ball,\n        Level,\n    }\n} catch (e) {}"],"names":["Ball","constructor","id","this","name","level","color","x","y","xv","yv","rotation","trans","onTee","wasReset","lastChat","tpTick","canStroke","health","score","time","clears","Array","fill","Infinity","aiming","aimX","aimY","aimVelX","aimVelY","aimPower","Level","points","holeX","holeY","width","point","Math","max","isWithin","x1","y1","w","h","intersect","x2","y2","x3","y3","x4","y4","denominator","ua","intersectPoint","ub","distToSegment","p1","v1","w1","sqr","dist2","v","sqrt","p","l2","t","min","distToSegmentSquared","module","exports","e"],"version":3,"file":"index.166820df.js.map"}