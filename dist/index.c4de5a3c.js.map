{"mappings":"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","sources":["src/sketch.js"],"sourcesContent":["\nlet game = {\n    username: undefined,\n    connected: false,\n    started: false,\n\n    socket: undefined,\n    id: undefined,\n    levels: undefined,\n\n    world: undefined,\n    selfBall: undefined,\n    worldUpdateTime: 0,\n    prevWorld: undefined,\n\n    chat: [],\n    chatting: false,\n\n    input: {}\n};\n\nlet temp = {}\n\nlet assets = {\n    font: undefined,\n    sfx: {}\n}\n\nconst constant = {\n    adjectives: ['fortunate', 'bewildering', 'long', 'merciless', 'determined', 'painless', 'long long long', 'cautious', 'depressing', 'thoughtful', 'courageous', 'optimistic', 'exuberant', 'difficult', 'confusing', 'quick', 'cheerful', 'hopeless', 'glorious', 'short', 'charming', 'confusing', 'lonely', 'unknown', 'painful', 'unfortunate', 'infinite', 'difficult', 'comfortable', 'dull', 'elegant', 'perfect']\n}\n\nlet SCALE = 1, OFFSET_X = 0, OFFSET_Y = 0;\n\nfunction preload() {\n    assets.font = loadFont('static/koubit_001.ttf');\n    assets.sfx.complete = loadSound('static/sfx/complete.wav');\n    assets.sfx.hit = loadSound('static/sfx/hit.wav');\n    assets.sfx.land = loadSound('static/sfx/land.wav');\n    assets.sfx.pass = loadSound('static/sfx/pass.wav');\n    assets.sfx.reset = loadSound('static/sfx/reset.wav');\n    assets.sfx.score = loadSound('static/sfx/score.wav');\n}\n\nasync function setup() {\n\ntextFont(assets.font);\n\ncreateCanvas(1, 1);\nwindowResized();\n\n}\n\nfunction isLoggedIn() {\n    return !!localStorage.getItem('nathan_golfing_journey_id');\n}\n\nfunction getAdjective() {\n    let adj = localStorage.getItem('nathan_golfing_journey_adjective');\n    if (adj == undefined) {\n        return undefined;\n    }\n    return constant.adjectives[parseInt(adj)];\n}\n\nasync function connectNew(username) {\n    let json = await axios.post('/nathangolfingjourney/new_ball', {\n        username\n    }).then(res => res.data);\n\n    if (!json.success) {\n        temp.usernameFailReason = json.error || 'unknown error';\n        temp.attemptingToSignUp = false;\n        return;\n    } \n\n    localStorage.setItem('nathan_golfing_journey_id', json.id);\n}\n\nasync function connect() {\n    if (!localStorage.getItem('nathan_golfing_journey_id')) {\n        return false;\n    }\n\n    id = localStorage.getItem('nathan_golfing_journey_id');\n\n    game.levels = [];\n    game.chat = [];\n    game.world = {};\n    game.prevWorld = {};\n\n    temp.played = {};\n\n    game.input = {\n        aiming: false,\n        aimX: 0,\n        aimY: 0,\n        aimVelX: 0,\n        aimVelY: 0,\n        aimPower: 0,\n    }\n\n    game.socket = io({query: \"id=\" + id, path: '/nathangolfingjourney/socket.io'});\n\n    game.socket.on('accept', (data) => {\n\n        if (!data.success) {\n            temp.connectionError = data.error;\n            return;\n        }\n\n        game.username = data.username;\n        game.connected = true;\n\n    });\n\n    game.socket.on('levels', (data) => {\n\n        game.levels = data.levels;\n\n    });\n\n    game.socket.on('world', (data) => {\n\n        game.prevWorld = {...game.world};\n        game.world = data;\n        game.worldUpdateTime = Date.now();\n\n        temp.played = {};\n\n        if (game.world.balls[id] && game.world.balls[id].ball) {\n            game.selfBall = game.world.balls[id].ball;\n        }\n\n        game.chat = game.chat.filter((message) => {\n            return message.tick > game.world.tick - 200;\n        })\n        \n    });\n\n    game.socket.on('chat', (data) => {\n        game.chat.unshift(data);\n    });\n\n    game.socket.on('reload', async (data) => {\n        game.socket.disconnect();\n        await connect();\n    });\n\n    return true;\n}\n\nfunction windowResized() {\n    resizeCanvas(windowWidth, windowHeight);\n\n    SCALE = min(width / 200, height / 100);\n    OFFSET_X = max(0, width / 200 - height / 100) * 100;\n    OFFSET_Y = max(0, height / 100 - width / 200) * 50;\n}\n\nfunction keyTyped() {\n    if (!game.started) {\n        if (getAdjective()) {\n            if (temp.usernameTyped == undefined) {\n                temp.usernameTyped = \"\";\n            }\n    \n            if (key != 'Enter' && temp.usernameTyped.length <= 16) {\n                temp.usernameTyped += key;\n            }\n            \n        }\n        return\n    }\n    \n    if (game.chatting) {\n        if (temp.typing.length < 63 && key != 'Enter') {\n            temp.typing += key;\n        }\n    }\n    \n}\n\nfunction keyPressed() {\n    if (!game.started) {\n        if (getAdjective()) {\n            if (temp.usernameTyped == undefined) {\n                temp.usernameTyped = \"\";\n            }\n\n            if (keyCode == BACKSPACE) {\n                if(temp.usernameTyped.length > 0) {\n                    temp.usernameTyped = temp.usernameTyped.substring(0, temp.usernameTyped.length - 1);\n                }\n            }\n            if (keyCode == ENTER) {\n                if (!temp.attemptingToSignUp) {\n                    let trimmed = temp.usernameTyped.trim();\n                    if (trimmed.length > 0) {\n                        temp.attemptingToSignUp = true;\n                        connectNew(trimmed);\n                    }\n                }\n            }\n        }\n\n        return;\n    }\n\n    if (keyCode == ESCAPE) {\n        game.chatting = false;\n        temp.typing = \"\";\n    }\n    if (keyCode == ENTER) {\n        if (game.chatting) {\n            game.chatting = false;\n            if (temp.typing.trim().length > 0) {\n                game.socket.emit('chat_request', {message: temp.typing});\n            }\n            \n        } else {\n            game.chatting = true;\n            temp.typing = \"\";\n        }\n    }\n    if (keyCode == BACKSPACE) {\n        if (game.chatting) {\n            if(temp.typing.length > 0) {\n                temp.typing = temp.typing.substring(0, temp.typing.length - 1);\n            }\n        }\n    }\n}\n\nfunction mousePressed() {\n    userStartAudio();\n\n    if (!game.started) {\n        return;\n    }\n\n    game.input.aiming = true;\n\n    game.input.aimX = (mouseX - OFFSET_X) / SCALE;\n    game.input.aimY = (mouseY - OFFSET_Y) / SCALE;\n}\n\nfunction mouseReleased() {\n    if (!game.started) {\n        return;\n    }\n\n    if (game.input.aiming) {\n        game.socket.emit('stroke', game.input);\n        assets.sfx.hit.play();\n    }\n\n    game.input.aiming = false;\n}\n\nfunction update() {\n    \n    if (game.input.aiming) {\n        let aimMouseX = (mouseX - OFFSET_X) / SCALE;\n        let aimMouseY = (mouseY - OFFSET_Y) / SCALE;\n\n        let aimLength = sqrt(pow(game.input.aimX - aimMouseX, 2) + pow(game.input.aimY - aimMouseY, 2));\n\n        game.input.aimVelX = aimLength > 0 ? (aimMouseX - game.input.aimX) / aimLength : 0;\n        game.input.aimVelY = aimLength > 0 ? (aimMouseY - game.input.aimY) / aimLength : 0;\n\n        game.input.aimPower = min(pow(aimLength / 40, 1), 1);\n\n        game.socket.emit('aim_input', game.input);\n    }\n\n    if (game.selfBall) {\n        if (game.selfBall.wasReset) {\n            if (!temp.played.reset) {\n                temp.played.reset = true;\n                assets.sfx.reset.stop();\n                assets.sfx.reset.play();\n            }\n        }\n        if (game.selfBall.trans == 39) {\n            if (!temp.played.complete) {\n                temp.played.complete = true;\n                assets.sfx.complete.stop();\n                assets.sfx.complete.play();\n            }\n        } else if (game.selfBall.trans == 1) {\n            if (!temp.played.pass) {\n                temp.played.pass = true;\n                assets.sfx.pass.stop();\n                assets.sfx.pass.play();\n            }\n        }\n    }\n\n}\n\nfunction drawLevel(level, offset) {\n\n    let gaps = [];\n\n    colorMode(HSB, 255);\n    fill((level.id / 10000 * 1000) % 255, lerp(0, 255, min((5000 - Math.abs(level.id - 5000)) / 4000, 1)), 200);\n    colorMode(RGB, 255);\n    noStroke();\n\n    beginShape();\n\n    for (let v of level.points) {\n        vertex((v.x + offset) * SCALE, v.y * SCALE);\n        if (v.y > 99) {\n            gaps.push(v.x + offset);\n        }\n    }\n\n    vertex((level.width + offset) * SCALE, 1000 * SCALE);\n    vertex(offset * SCALE, 1000 * SCALE);\n\n    endShape(CLOSE);\n    \n    stroke(0);\n    noFill();\n\n    beginShape();\n    for (let v of level.points) {\n        vertex((v.x + offset) * SCALE, v.y * SCALE);\n    }\n    endShape();\n\n    fill(50, 150, 230);\n    for (let i = 0; i < gaps.length / 2 + 1; i += 2) {\n        let g1 = gaps[i];\n        let g2 = gaps[i + 1];\n\n        rect(g1 * SCALE, 98 * SCALE, (g2 - g1) * SCALE, 1000 * SCALE);\n    }\n\n}\n\nfunction drawLevelFlag(level, offset) {\n    if (game.selfBall) {\n        if (game.selfBall.level + 1 == level.id) {\n            \n            textSize(SCALE * 4);\n            textAlign(LEFT, TOP);\n            let w = textWidth(level.id);\n\n            stroke(0);\n            fill(250, 250, 200);\n\n            beginShape();\n            vertex((level.holeX + offset + 1.83) * SCALE, (level.holeY - 5) * SCALE);\n            vertex((level.holeX + offset + 2.5) * SCALE + w, (level.holeY - 5) * SCALE);\n            vertex((level.holeX + offset + 3) * SCALE + w, (level.holeY - 4) * SCALE);\n            vertex((level.holeX + offset + 2.5) * SCALE + w, (level.holeY - 3) * SCALE);\n            vertex((level.holeX + offset + 1.83) * SCALE, (level.holeY - 3) * SCALE);\n            endShape();\n\n            noStroke();\n            fill(100);\n            text(level.id, (level.holeX + offset + 2.5) * SCALE, (level.holeY - 6) * SCALE)\n\n            stroke(0);\n            fill(150);\n            rect((level.holeX + offset + 1.33) * SCALE, (level.holeY - 5) * SCALE, 0.5 * SCALE, 5 * SCALE);\n        }\n        \n    }\n}\n\nfunction drawLevelStats(level, offset) {\n    if (game.selfBall) {\n        if (game.selfBall.level == level.id) {\n            if (level.stats) {\n                \n                let posY = level.holeY + 5;\n                let posX = level.holeX + offset;\n                if (level.holeY > 50) {\n                    posY = level.holeY + 5;\n                }\n\n                noStroke();\n                fill(0);\n                textSize(3 * SCALE);\n                textAlign(LEFT, TOP);\n                text('strokes', posX * SCALE, posY * SCALE);\n                text('time', (posX + 30) * SCALE, posY * SCALE);\n                \n                console.log(level.stats.sortedByTime);\n                for (let i = 0; i < 10; i++) {\n                    let scoreId = level.stats.sortedByScore[i];\n                    if (scoreId && game.world.balls[scoreId]) {\n                        let ball = game.world.balls[scoreId].ball;\n\n                        fill(ball.color[0], ball.color[1], ball.color[2]);\n                        text('#' + (i + 1) +  ' - ' + ball.clears[Math.floor(level.id / 100) - 1][0] + ' - ' + ball.name, posX * SCALE, (posY + (i + 1) * 1.5 + 1) * SCALE);\n                    }\n\n                    let timeId = level.stats.sortedByTime[i];\n                    if (timeId && game.world.balls[timeId]) {\n                        let ball = game.world.balls[timeId].ball;\n\n                        let time = ball.clears[Math.floor(level.id / 100) - 1][1];\n\n                        let seconds = floor(time) % 60;\n                        let minutes = floor(time / 60) % 60;\n                        let hours = floor(time / 3600) % 60;\n\n                        fill(ball.color[0], ball.color[1], ball.color[2]);\n                        text('#' + (i + 1) +  ' - ' + hours + 'h ' + minutes + 'm ' + seconds + 's' + ' - ' + ball.name, (posX + 30) * SCALE, (posY + (i + 1) * 1.5 + 1) * SCALE);\n                    }\n                    \n                }\n                let myScoreIndex = level.stats.sortedByScore.indexOf(game.selfBall.id);\n                if (myScoreIndex >= 10) {\n                    fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2]);\n                    text('#' + (myScoreIndex + 1) +  ' - ' + game.selfBall.clears[Math.floor(level.id / 100) - 1][0] + ' - ' + game.selfBall.name, posX * SCALE, (posY + 18) * SCALE);\n                }\n                let myTimeIndex = level.stats.sortedByTime.indexOf(game.selfBall.id);\n                if (myTimeIndex >= 10) {\n                    let time = game.selfBall.clears[Math.floor(level.id / 100) - 1][1];\n\n                    let seconds = floor(time) % 60;\n                    let minutes = floor(time / 60) % 60;\n                    let hours = floor(time / 3600) % 60;\n\n                    fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2]);\n                    text('#' + (i + 1) +  ' - ' + hours + 'h ' + minutes + 'm ' + seconds + 's' + ' - ' + ball.name, (posX + 30) * SCALE, (posY + (i + 1) * 1.5 + 1) * SCALE);\n                }\n\n                \n            }\n        }\n    }\n}\n\nfunction drawAim(input, color = [0, 0, 0], transparency = 1) {\n    stroke(color[0], color[1], color[2], min(input.aimPower * 2000, 255 * transparency));\n    noFill();\n\n    let aimSize = min(input.aimPower * 60, 3);\n\n    ellipse(input.aimX * SCALE, input.aimY * SCALE, aimSize * SCALE, aimSize * SCALE);\n    \n    line((input.aimX - input.aimVelX * 1.5) * SCALE, \n        (input.aimY - input.aimVelY * 1.5) * SCALE, \n        (input.aimX - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE);\n    \n    stroke(color[0], color[1], color[2], min(input.aimPower * 2000, 100 * transparency));\n    line((input.aimX + input.aimVelX * 1.5) * SCALE, \n        (input.aimY + input.aimVelY * 1.5) * SCALE, \n        (input.aimX + input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY + input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE);\n    \n    line((input.aimX + input.aimVelY + input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY - input.aimVelX + input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimX - input.aimVelY + input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY + input.aimVelX + input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE);\n    \n    noStroke();\n    fill(color[0], color[1], color[2], min(input.aimPower * 3000, 255 * transparency));\n    triangle(\n        (input.aimX - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimY - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimX + input.aimVelY * 0.5 + input.aimVelX * 1.5 - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimY - input.aimVelX * 0.5 + input.aimVelY * 1.5 - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimX - input.aimVelY * 0.5 + input.aimVelX * 1.5 - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimY + input.aimVelX * 0.5 + input.aimVelY * 1.5 - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n    )\n}\n\nfunction draw() {\n    if (!game.started) {\n        background(0);\n\n        noStroke();\n        fill(255);\n\n        textSize(32);\n        textAlign(CENTER, TOP);\n        text(\"Nathan Golfing 2:\", width / 2, height / 2 - 150);\n\n        textSize(64);\n        text(\"Journey\", width / 2, height / 2 - 140);\n\n        if (!isLoggedIn()) {\n            textSize(32);\n\n            if (!getAdjective()) {\n                text(\"describe your journey:\", width / 2, height / 2 - 80);\n                if (temp.adjectiveChoice == undefined) {\n                    temp.adjectiveChoice = floor(random(0, constant.adjectives.length));\n                }\n\n                temp.adjective = constant.adjectives[temp.adjectiveChoice];\n                text(temp.adjective, width / 2, height / 2 - 50);\n                \n                triangle(width / 2 + 10, height / 2 - 15, width / 2 + 20, height / 2 - 10, width / 2 + 10, height / 2 - 5);\n                triangle(width / 2 - 20, height / 2 - 15, width / 2 - 10, height / 2 - 15, width / 2 - 15, height / 2 - 5);\n\n                if (mouseIsPressed) {\n                    if (isWithin(mouseX, mouseY, width / 2 + 10, height / 2 - 15, 10, 10)) {\n                        temp.adjectiveChoice += 1;\n                        if (temp.adjectiveChoice >= constant.adjectives.length) {\n                        temp.adjectiveChoice = 0\n                        }\n                    } else if (isWithin(mouseX, mouseY, width / 2 - 20, height / 2 - 15, 10, 10)) {\n                        localStorage.setItem(\"nathan_golfing_journey_adjective\", temp.adjectiveChoice);\n                    } \n                }\n                return;\n            }\n\n            text(\"This is the \" + getAdjective() + \" journey of: \", width / 2, height / 2 - 80);\n            if (temp.usernameTyped == undefined) {\n                temp.usernameTyped = \"\";\n            }\n\n            if (temp.usernameFailReason) {\n                fill(255, 0, 0);\n                text(temp.usernameFailReason, width / 2, height / 2 + 40);\n            }\n            \n            fill(255);\n            textSize(64);\n            text(temp.usernameTyped + \"_\", width / 2, height / 2);\n\n        } else {\n\n            if (!game.connected) {\n                if (!temp.attemptedToConnect) {\n                    connect();\n                    temp.attemptedToConnect = true;\n                }\n                textSize(32);\n                text(\"Loading...\", width / 2, height / 2);\n\n                if (temp.connectionError) {\n                    fill(255, 0, 0);\n                    text(temp.connectionError, width / 2, height / 2 + 40);\n                }\n            } else {\n                textSize(32);\n                text(\"This is the \" + getAdjective() + \" journey of\", width / 2, height / 2 - 80);\n                textSize(64);\n                if (game.selfBall) {\n                    fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2])\n                } else {\n                    fill(255);\n                }\n                text(game.username, width / 2, height / 2 - 70);\n\n                fill(255);\n                rect(width / 2 - 50, height / 2 + 10, 100, 20);\n                textSize(32);\n                fill(0);\n\n                text(\"play\", width / 2, height / 2 + 4);\n                if (mouseIsPressed && isWithin(mouseX, mouseY, width / 2 - 50, height / 2 + 10, 100, 20)) {\n                    game.started = true;\n                }\n            }\n        }\n\n        return;\n    }\n\n    update();\n\n    background(250);\n    push(); // World\n    \n    translate(OFFSET_X, OFFSET_Y);\n\n    if (game.world != undefined && game.prevWorld != undefined) {\n\n        let subtick = (Date.now() - game.worldUpdateTime) / 50;\n\n        if (game.selfBall) {\n            let prevPlayer = game.prevWorld.balls[game.selfBall.id];\n            let player = game.world.balls[game.selfBall.id];\n            if (player && prevPlayer) {\n                let prevt = prevPlayer.ball.trans, newt = player.ball.trans;\n                let x = newt > prevt ? newt : lerp(prevt, newt, subtick);\n                if (game.selfBall.trans >= 0) {\n                    translate(-game.levels[1].width * ((40 - x) / 40) * SCALE, 0)\n                }\n            }\n            \n        }\n        \n        if (game.levels) {\n\n            let sum = 20 - game.levels[0].width; \n            for (let i = 0; i < 4; i++) {\n                drawLevelFlag(game.levels[i], sum);\n                sum += game.levels[i].width;\n            }\n            \n        }\n\n        temp.offlineBalls = [0, 0, 0, 0];\n\n        push();\n        translate((-game.levels[1].x + 20) * SCALE, 0);\n        for (let id of game.world.sortedBalls) {\n            let player = game.world.balls[id];\n            if (!player.online) {\n                if (game.selfBall) {\n                    let ball = player.ball\n                    if (ball.level >= game.selfBall.level && ball.level <= game.selfBall.level + 2) {\n\n                        stroke(0);\n                        fill(255);\n\n                        let index = ball.level - game.selfBall.level;\n                        if (temp.offlineBalls[index] <= 10) {\n                            let level = game.levels[index];\n                            let posX = level.x + level.holeX, posY = level.holeY - temp.offlineBalls[index] * 2 - 5;\n\n                            let fmtBallName = ball.name + ' (' + ball.score + ')';\n\n                            textSize(3 * SCALE);\n                            textAlign(LEFT, CENTER);\n\n                            rect((posX - 1) * SCALE, (posY - 3) * SCALE, 2 * SCALE + textWidth(fmtBallName), 2 * SCALE);\n\n                            noStroke();\n                            fill(ball.color[0], ball.color[1], ball.color[2]);\n                            text(fmtBallName, posX * SCALE, (posY - 2.5) * SCALE);\n\n                            temp.offlineBalls[index] += 1;\n                        }\n                    }\n                }\n            }\n        }\n\n        for (let id of game.world.sortedBalls) {\n            let player = game.world.balls[id];\n            let prevPlayer = game.prevWorld.balls[id];\n            if (player && prevPlayer) {\n                if (player.online) {\n\n                    let prevBall = prevPlayer.ball, ball = player.ball;\n\n                    let pos = {x: lerp(prevBall.x, ball.x, subtick), y: lerp(prevBall.y, ball.y, subtick)};\n                    let ang = lerp(prevBall.rotation, ball.rotation, subtick);\n                    stroke(0);\n                    fill(ball.color[0], ball.color[1], ball.color[2]);\n                    arc(pos.x * SCALE, pos.y * SCALE, 1 * SCALE, 1 * SCALE, ang, ang + PI);\n                    fill(ball.color[0] * 0.8, ball.color[1] * 0.8, ball.color[2] * 0.8);\n                    arc(pos.x * SCALE, pos.y * SCALE, 1 * SCALE, 1 * SCALE, ang + PI, ang + TWO_PI);\n\n                    noStroke();\n                    textSize(32);\n                    textAlign(CENTER, BOTTOM)\n                    text(ball.name, pos.x * SCALE, (pos.y - 2) * SCALE);\n\n                    if (game.selfBall && ball.id == game.selfBall.id) {\n                        stroke(0);\n                        noFill();\n                        triangle((pos.x) * SCALE, (pos.y - 1) * SCALE, (pos.x - 0.5) * SCALE, (pos.y - 1.5) * SCALE, (pos.x + 0.5) * SCALE, (pos.y - 1.5) * SCALE);\n                    } else {\n                        \n                        if (ball.aiming) {\n\n                            let aimX = ball.aimX;\n                            let aimY = ball.aimY;\n\n                            let aimVelX = lerp(prevBall.aimVelX, ball.aimVelX, subtick);\n                            let aimVelY = lerp(prevBall.aimVelY, ball.aimVelY, subtick);\n\n                            let aimPower = lerp(prevBall.aimPower, ball.aimPower, subtick);\n\n                            let input = {aimX, aimY, aimVelX, aimVelY, aimPower};\n                            drawAim(input, ball.color, 0.5);\n                        }\n                        \n                    }\n                }\n            }\n            \n        }\n\n    }\n    pop();\n\n    if (game.levels) {\n\n        let sum = 20 - game.levels[0].width; \n        for (let i = 0; i < 4; i++) {\n            drawLevel(game.levels[i], sum);\n            sum += game.levels[i].width;\n        }\n        \n        sum = 20 - game.levels[0].width; \n        for (let i = 0; i < 4; i++) {\n            drawLevelStats(game.levels[i], sum);\n            sum += game.levels[i].width;\n        }\n        \n    }\n\n    \n\n    if (game.input.aiming) {\n        if (game.selfBall) {\n            drawAim(game.input, [0, 0, 0], game.selfBall.canStroke && game.selfBall.trans < 0 ? 1 : 0.4);\n        }\n        \n    }\n\n    pop();\n\n    if (game.selfBall) {\n        let selfIndex = game.world.sortedBalls.indexOf(game.selfBall.id);\n\n        textAlign(CENTER, TOP); \n        fill(51);\n\n        textSize(64);\n        fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2]);\n        text(game.selfBall.name, width / 2, -8);\n        textSize(32);\n        fill(51);\n        text(game.selfBall.score + ' (avg ' + nf(game.selfBall.score / max(game.selfBall.level, 1), 0, 2) + ')', width / 2, 32);\n        text(game.selfBall.level + ' / 10000 (#' + (selfIndex + 1) + ')', width / 2, 48);\n\n        if (game.selfBall.trans > 0) {\n            let seconds = floor(game.selfBall.time) % 60;\n            let minutes = floor(game.selfBall.time / 60) % 60;\n            let hours = floor(game.selfBall.time / 3600) % 60;\n\n            text(hours + 'h ' + minutes + 'm ' + seconds + 's', width / 2, 64);\n        }\n\n        textSize(32);\n\n        let top = [];\n        let topClosest = [];\n        let bottomClosest = [];\n\n        for (let i = 0; i < 5; i++) {\n            let b = game.world.sortedBalls[i];\n            if (b && i < selfIndex) top.push(b);\n        }\n        for (let i = 1; i <= 5; i++) {\n            let b = game.world.sortedBalls[selfIndex - i];\n            if (b && !top.includes(b)) topClosest.push(b);\n        }\n        for (let i = 1; i <= 10; i++) {\n            let b = game.world.sortedBalls[selfIndex + i];\n            if (b) bottomClosest.push(b);\n        }\n\n        textSize(32);\n\n        textAlign(RIGHT, CENTER);\n        let k = 0;\n        for (let b of top.concat(topClosest.reverse())) {\n            let ball = game.world.balls[b].ball;\n\n            fill(250);\n\n            let nameFmt = '#' + (game.world.sortedBalls.indexOf(b) + 1) + ' ' + ball.name + ' (' + ball.level + '/' + ball.score + ')';\n\n            let w = textWidth(nameFmt);\n\n            stroke(0);\n            let offsetY = top.includes(b) ? 0 : 10;\n            beginShape();\n\n            vertex(width - 15, offsetY + 5 + k * 20);\n            vertex(width - 5, offsetY + 15 + k * 20);\n            vertex(width - 15, offsetY + 25 + k * 20);\n            vertex(width - 25 - w, offsetY + 25 + k * 20);\n            vertex(width - 25 - w, offsetY + 5 + k * 20);\n            \n            endShape(CLOSE);\n\n            noStroke();\n            fill(ball.color[0], ball.color[1], ball.color[2]);\n            text(nameFmt, width - 15, offsetY +  10 + k * 20);\n\n            k++;\n        }\n\n        k = 0;\n        textAlign(LEFT, CENTER);\n        for (let b of bottomClosest) {\n            let ball = game.world.balls[b].ball;\n\n            fill(250);\n\n            let nameFmt = '#' + (game.world.sortedBalls.indexOf(b) + 1) + ' ' + ball.name + ' (' + ball.level + '/' + ball.score + ')';\n\n            let w = textWidth(nameFmt);\n\n            stroke(0);\n            beginShape();\n\n            vertex(15, 5 + k * 20);\n            vertex(5, 15 + k * 20);\n            vertex(15, 25 + k * 20);\n            vertex(25 + w, 25 + k * 20);\n            vertex(25 + w, 5 + k * 20);\n            \n            endShape(CLOSE);\n\n            noStroke();\n            fill(ball.color[0], ball.color[1], ball.color[2]);\n            text(nameFmt, 15, 10 + k * 20);\n\n            k++;\n        }\n    }\n\n    if (game.chat) {\n\n        let k = 0;\n        fill(0, 100);\n        rect(0, height - 20 - game.chat.length * 15, 800, game.chat.length * 15);\n        textAlign(LEFT, BOTTOM);\n        textSize(32);\n        for (let message of game.chat) {\n            fill(message.color[0], message.color[1], message.color[2]);\n            text(message.message, 5, height - 20 - k * 15);\n            k++;\n        }\n\n        if (game.chatting) {\n            fill(51);\n            text(temp.typing + (Math.floor(millis() / 500) % 2 == 0 ? '_' : ''), 5, height - 5);\n        }\n\n    }\n\n}"],"names":["game","username","undefined","connected","started","socket","id","levels","world","selfBall","worldUpdateTime","prevWorld","chat","chatting","input","temp","assets","font","sfx","constant","adjectives","SCALE","OFFSET_X","OFFSET_Y","preload","loadFont","complete","loadSound","hit","land","pass","reset","score","async","setup","textFont","createCanvas","windowResized","isLoggedIn","localStorage","getItem","getAdjective","adj","parseInt","connectNew","json","axios","post","then","res","data","success","usernameFailReason","error","attemptingToSignUp","setItem","connect","played","aiming","aimX","aimY","aimVelX","aimVelY","aimPower","io","query","path","on","connectionError","Date","now","balls","ball","filter","message","tick","unshift","disconnect","resizeCanvas","windowWidth","windowHeight","min","width","height","max","keyTyped","typing","length","key","usernameTyped","keyPressed","keyCode","ESCAPE","ENTER","trim","emit","BACKSPACE","substring","trimmed","mousePressed","userStartAudio","mouseX","mouseY","mouseReleased","play","update","aimMouseX","aimMouseY","aimLength","sqrt","pow","wasReset","stop","trans","drawLevel","level","offset","gaps","colorMode","HSB","fill","lerp","Math","abs","RGB","noStroke","beginShape","v","points","vertex","x","y","push","endShape","CLOSE","stroke","noFill","v1","i","g1","g2","rect","drawLevelFlag","textSize","textAlign","LEFT","TOP","w","textWidth","holeX","holeY","text","drawLevelStats","stats","posY","posX","console","log","sortedByTime","i1","scoreId","sortedByScore","color","clears","floor","name","timeId","time","seconds","minutes","hours","myScoreIndex","indexOf","drawAim","transparency","aimSize","ellipse","line","triangle","draw","background","translate","subtick","prevPlayer","player","prevt","newt","sum","offlineBalls","sortedBalls","online","index","fmtBallName","CENTER","id1","prevBall","pos","ang","rotation","arc","PI","TWO_PI","BOTTOM","pop","i4","canStroke","selfIndex","nf","top","topClosest","bottomClosest","b","i5","includes","i6","RIGHT","k","concat","reverse","nameFmt","offsetY","b1","millis","mouseIsPressed","isWithin","attemptedToConnect","adjectiveChoice","random","adjective"],"version":3,"file":"index.c4de5a3c.js.map"}