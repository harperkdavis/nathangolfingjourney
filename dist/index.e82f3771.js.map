{"mappings":"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","sources":["node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","node_modules/socket.io/node_modules/@socket.io/base64-arraybuffer/dist/base64-arraybuffer.es5.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","node_modules/socket.io/node_modules/@socket.io/component-emitter/index.mjs","node_modules/socket.io/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/util.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transport.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io/build/esm/on.js","node_modules/socket.io/build/esm/socket.js","node_modules/socket.io/build/esm/contrib/backo2.js","node_modules/socket.io/build/esm/manager.js","node_modules/socket.io/build/esm/index.js","node_modules/socket.io/build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"@socket.io/base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport globalThis from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["t","e","exports","module","define","amd","globalThis","self","io","this","t1","Symbol","iterator","constructor","prototype","e1","TypeError","n1","n","length","r","enumerable","configurable","writable","Object","defineProperty","key","r1","i1","assign","arguments","hasOwnProperty","call","apply","o1","create","value","a1","s1","t2","setPrototypeOf","getPrototypeOf","__proto__","t3","e2","c1","Reflect","construct","sham","Proxy","Boolean","valueOf","u1","t4","e3","n2","push","i","Function","bind","h1","t5","Map","toString","indexOf","has","get","set","f1","ReferenceError","l","p","d","t6","e4","n3","t7","e5","getOwnPropertyDescriptor","y","Array","v","t8","e6","n4","isArray","slice","name","from","test","s","done","f","o","a","next","return","PACKET_TYPES","open","close","ping","pong","message","upgrade","noop","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","SEPARATOR","String","fromCharCode","Emitter","on","addEventListener","event","fn","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","emitReserved","listeners","hasListeners","window","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","decode","qs","qry","pairs","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","G","xdomain","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","_this3","onOpen","_this4","count","_this5","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","path","Request","uri","req","request","method","xhrStatus","_this6","onError","onData","_this7","pollXhr","async","xscheme","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","_this9","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","n12","lastPacket","transports","websocket","re","parts","parse","names","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","substr","queryKey","$0","$1","$2","Socket","s2","_this","writeBuffer","prevBufferLen","_extends","agent","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","PacketType","withNativeFile","File","isBinary","hasBinary","toJSON","_typeof","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","CONNECT","DISCONNECT","EVENT","ACK","CONNECT_ERROR","BINARY_EVENT","BINARY_ACK","Encoder","replacer","encodeAsString","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","isPayloadValid","finishedReconstruction","reconPack","binData","t38","Rt","freeze","_t","At","Et","RESERVED_EVENTS","connect","connect_error","disconnect","disconnecting","newListener","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_reconnecting","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","undefined","_destroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","sameNamespace","forceNew","multiplex","Lt"],"version":3,"file":"index.e82f3771.js.map"}