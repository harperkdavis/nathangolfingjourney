{"mappings":"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","sources":["node_modules/socket.io/client-dist/socket.io.min.js","node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io-component-emitter/lib/esm/index.js","node_modules/engine.io-client/build/esm/globals.js","node_modules/engine.io-client/build/esm/util.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/engine.io-client/build/esm/transports/polling-xhr.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/engine.io-client/build/esm/index.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io/build/esm/on.js","node_modules/socket.io/build/esm/socket.js","node_modules/socket.io/build/esm/contrib/backo2.js","node_modules/socket.io/build/esm/manager.js","node_modules/socket.io/build/esm/index.js","node_modules/socket.io/build/esm/url.js"],"sourcesContent":[null,"const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\", // used on the client side\n    \"connect_error\", // used on the client side\n    \"disconnect\", // used on both sides\n    \"disconnecting\", // used on the server side\n    \"newListener\", // used by the Node.js EventEmitter\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\nfunction isNamespaceValid(nsp) {\n    return typeof nsp === \"string\";\n}\n// see https://caniuse.com/mdn-javascript_builtins_number_isinteger\nconst isInteger = Number.isInteger ||\n    function (value) {\n        return (typeof value === \"number\" &&\n            isFinite(value) &&\n            Math.floor(value) === value);\n    };\nfunction isAckIdValid(id) {\n    return id === undefined || isInteger(id);\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\nfunction isDataValid(type, payload) {\n    switch (type) {\n        case PacketType.CONNECT:\n            return payload === undefined || isObject(payload);\n        case PacketType.DISCONNECT:\n            return payload === undefined;\n        case PacketType.EVENT:\n            return (Array.isArray(payload) &&\n                (typeof payload[0] === \"number\" ||\n                    (typeof payload[0] === \"string\" &&\n                        RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n        case PacketType.ACK:\n            return Array.isArray(payload);\n        case PacketType.CONNECT_ERROR:\n            return typeof payload === \"string\" || isObject(payload);\n        default:\n            return false;\n    }\n}\nexport function isPacketValid(packet) {\n    return (isNamespaceValid(packet.nsp) &&\n        isAckIdValid(packet.id) &&\n        isDataValid(packet.type, packet.data));\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","header","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","_Error","reason","description","context","_this","_inheritsLoose","_wrapNativeSuper","Error","Transport","_Emitter","_this2","writable","query","socket","forceBase64","_proto","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","Polling","_Transport","_polling","_poll","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this4","_this5","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","_createClass","get","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","_Polling","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","_proto2","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","XHR","_BaseXHR","_this6","_extends","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_BaseWS","_packet","WT","_transport","WebTransport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","_typeof","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_SocketWithoutUpgrade","_this7","_upgrades","_probe","_this8","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","_SocketWithUpgrade","o","map","DEFAULT_TRANSPORTS","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","PacketType","RESERVED_EVENTS","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","isObject","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","_proto3","binData","isInteger","isFinite","floor","isDataValid","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","_readyState","_b","_c","_len2","_key2","retries","fromQueue","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","reject","arg1","arg2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","f","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","active","_destroy","_i","_nsps","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"version":3,"file":"index.b06a42c0.js.map","sourceRoot":"/__parcel_source_root/"}