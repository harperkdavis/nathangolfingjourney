{"mappings":"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","sources":["src/sketch.js"],"sourcesContent":["\nconst BASE_PATH = '';\n\nlet game = {\n    username: undefined,\n    connected: false,\n    started: false,\n\n    socket: undefined,\n    id: undefined,\n    levels: undefined,\n\n    world: undefined,\n    selfBall: undefined,\n    worldUpdateTime: 0,\n    prevWorld: undefined,\n\n    chat: [],\n    chatting: false,\n\n    input: {}\n};\n\nlet temp = {}\n\nlet assets = {\n    font: undefined,\n    sfx: {}\n}\n\nconst constant = {\n    adjectives: ['fortunate', 'bewildering', 'long', 'merciless', 'determined', 'painless', 'long long long', 'cautious', 'depressing', 'thoughtful', 'courageous', 'optimistic', 'exuberant', 'difficult', 'confusing', 'quick', 'cheerful', 'hopeless', 'glorious', 'short', 'charming', 'confusing', 'lonely', 'unknown', 'painful', 'unfortunate', 'infinite', 'difficult', 'comfortable', 'dull', 'elegant', 'perfect']\n}\n\nlet SCALE = 1, OFFSET_X = 0, OFFSET_Y = 0;\n\nfunction preload() {\n    assets.font = loadFont('static/koubit_001.ttf');\n    assets.sfx.complete = loadSound('static/sfx/complete.wav');\n    assets.sfx.hit = loadSound('static/sfx/hit.wav');\n    assets.sfx.land = loadSound('static/sfx/land.wav');\n    assets.sfx.pass = loadSound('static/sfx/pass.wav');\n    assets.sfx.reset = loadSound('static/sfx/reset.wav');\n    assets.sfx.score = loadSound('static/sfx/score.wav');\n}\n\nasync function setup() {\n\ntextFont(assets.font);\n\ncreateCanvas(1, 1);\nwindowResized();\n\n}\n\nfunction isLoggedIn() {\n    return !!localStorage.getItem('nathan_golfing_journey_id');\n}\n\nfunction getAdjective() {\n    let adj = localStorage.getItem('nathan_golfing_journey_adjective');\n    if (adj == undefined) {\n        return undefined;\n    }\n    return constant.adjectives[parseInt(adj)];\n}\n\nasync function connectNew(username) {\n    let json = await axios.post(`${BASE_PATH}/new_ball`, {\n        username\n    }).then(res => res.data);\n\n    if (!json.success) {\n        temp.usernameFailReason = json.error || 'unknown error';\n        temp.attemptingToSignUp = false;\n        return;\n    } \n\n    localStorage.setItem('nathan_golfing_journey_id', json.id);\n}\n\nasync function connect() {\n    if (!localStorage.getItem('nathan_golfing_journey_id')) {\n        return false;\n    }\n\n    id = localStorage.getItem('nathan_golfing_journey_id');\n\n    game.levels = [];\n    game.chat = [];\n    game.world = {};\n    game.prevWorld = {};\n\n    temp.played = {};\n\n    game.input = {\n        aiming: false,\n        aimX: 0,\n        aimY: 0,\n        aimVelX: 0,\n        aimVelY: 0,\n        aimPower: 0,\n    }\n\n    game.socket = io({query: \"id=\" + id, path: `${BASE_PATH}/socket.io`});\n\n    game.socket.on('accept', (data) => {\n\n        if (!data.success) {\n            temp.connectionError = data.error;\n            return;\n        }\n\n        game.username = data.username;\n        game.connected = true;\n\n    });\n\n    game.socket.on('levels', (data) => {\n\n        game.levels = data.levels;\n\n    });\n\n    game.socket.on('world', (data) => {\n\n        game.prevWorld = {...game.world};\n        game.world = data;\n        game.worldUpdateTime = Date.now();\n\n        temp.played = {};\n\n        if (game.world.balls[id] && game.world.balls[id].ball) {\n            game.selfBall = game.world.balls[id].ball;\n        }\n\n        game.chat = game.chat.filter((message) => {\n            return message.tick > game.world.tick - 200;\n        })\n        \n    });\n\n    game.socket.on('chat', (data) => {\n        game.chat.unshift(data);\n    });\n\n    game.socket.on('reload', async (data) => {\n        game.socket.disconnect();\n        await connect();\n    });\n\n    return true;\n}\n\nfunction windowResized() {\n    resizeCanvas(windowWidth, windowHeight);\n\n    SCALE = min(width / 200, height / 100);\n    OFFSET_X = max(0, width / 200 - height / 100) * 100;\n    OFFSET_Y = max(0, height / 100 - width / 200) * 50;\n}\n\nfunction keyTyped() {\n    if (!game.started) {\n        if (getAdjective()) {\n            if (temp.usernameTyped == undefined) {\n                temp.usernameTyped = \"\";\n            }\n    \n            if (key != 'Enter' && temp.usernameTyped.length <= 16) {\n                temp.usernameTyped += key;\n            }\n            \n        }\n        return\n    }\n    \n    if (game.chatting) {\n        if (temp.typing.length < 63 && key != 'Enter') {\n            temp.typing += key;\n        }\n    }\n    \n}\n\nfunction keyPressed() {\n    if (!game.started) {\n        if (getAdjective()) {\n            if (temp.usernameTyped == undefined) {\n                temp.usernameTyped = \"\";\n            }\n\n            if (keyCode == BACKSPACE) {\n                if(temp.usernameTyped.length > 0) {\n                    temp.usernameTyped = temp.usernameTyped.substring(0, temp.usernameTyped.length - 1);\n                }\n            }\n            if (keyCode == ENTER) {\n                if (!temp.attemptingToSignUp) {\n                    let trimmed = temp.usernameTyped.trim();\n                    if (trimmed.length > 0) {\n                        temp.attemptingToSignUp = true;\n                        connectNew(trimmed);\n                    }\n                }\n            }\n        }\n\n        return;\n    }\n\n    if (keyCode == ESCAPE) {\n        game.chatting = false;\n        temp.typing = \"\";\n    }\n    if (keyCode == ENTER) {\n        if (game.chatting) {\n            game.chatting = false;\n            if (temp.typing.trim().length > 0) {\n                game.socket.emit('chat_request', {message: temp.typing});\n            }\n            \n        } else {\n            game.chatting = true;\n            temp.typing = \"\";\n        }\n    }\n    if (keyCode == BACKSPACE) {\n        if (game.chatting) {\n            if(temp.typing.length > 0) {\n                temp.typing = temp.typing.substring(0, temp.typing.length - 1);\n            }\n        }\n    }\n}\n\nfunction mousePressed() {\n    userStartAudio();\n\n    if (!game.started) {\n        return;\n    }\n\n    game.input.aiming = true;\n\n    game.input.aimX = (mouseX - OFFSET_X) / SCALE;\n    game.input.aimY = (mouseY - OFFSET_Y) / SCALE;\n}\n\nfunction mouseReleased() {\n    if (!game.started) {\n        return;\n    }\n\n    if (game.input.aiming) {\n        game.socket.emit('stroke', game.input);\n        assets.sfx.hit.play();\n    }\n\n    game.input.aiming = false;\n}\n\nfunction update() {\n    \n    if (game.input.aiming) {\n        let aimMouseX = (mouseX - OFFSET_X) / SCALE;\n        let aimMouseY = (mouseY - OFFSET_Y) / SCALE;\n\n        let aimLength = sqrt(pow(game.input.aimX - aimMouseX, 2) + pow(game.input.aimY - aimMouseY, 2));\n\n        game.input.aimVelX = aimLength > 0 ? (aimMouseX - game.input.aimX) / aimLength : 0;\n        game.input.aimVelY = aimLength > 0 ? (aimMouseY - game.input.aimY) / aimLength : 0;\n\n        game.input.aimPower = min(pow(aimLength / 40, 1), 1);\n\n        game.socket.emit('aim_input', game.input);\n    }\n\n    if (game.selfBall) {\n        if (game.selfBall.wasReset) {\n            if (!temp.played.reset) {\n                temp.played.reset = true;\n                assets.sfx.reset.stop();\n                assets.sfx.reset.play();\n            }\n        }\n        if (game.selfBall.trans == 39) {\n            if (!temp.played.complete) {\n                temp.played.complete = true;\n                assets.sfx.complete.stop();\n                assets.sfx.complete.play();\n            }\n        } else if (game.selfBall.trans == 1) {\n            if (!temp.played.pass) {\n                temp.played.pass = true;\n                assets.sfx.pass.stop();\n                assets.sfx.pass.play();\n            }\n        }\n    }\n\n}\n\nfunction drawLevel(level, offset) {\n\n    let gaps = [];\n\n    colorMode(HSB, 255);\n    fill((level.id / 10000 * 1000) % 255, lerp(0, 255, min((5000 - Math.abs(level.id - 5000)) / 4000, 1)), 200);\n    colorMode(RGB, 255);\n    noStroke();\n\n    beginShape();\n\n    for (let v of level.points) {\n        vertex((v.x + offset) * SCALE, v.y * SCALE);\n        if (v.y > 99) {\n            gaps.push(v.x + offset);\n        }\n    }\n\n    vertex((level.width + offset) * SCALE, 1000 * SCALE);\n    vertex(offset * SCALE, 1000 * SCALE);\n\n    endShape(CLOSE);\n    \n    stroke(0);\n    noFill();\n\n    beginShape();\n    for (let v of level.points) {\n        vertex((v.x + offset) * SCALE, v.y * SCALE);\n    }\n    endShape();\n\n    fill(50, 150, 230);\n    for (let i = 0; i < gaps.length / 2 + 1; i += 2) {\n        let g1 = gaps[i];\n        let g2 = gaps[i + 1];\n\n        rect(g1 * SCALE, 98 * SCALE, (g2 - g1) * SCALE, 1000 * SCALE);\n    }\n\n}\n\nfunction drawLevelFlag(level, offset) {\n    if (game.selfBall) {\n        if (game.selfBall.level + 1 == level.id) {\n            \n            textSize(SCALE * 4);\n            textAlign(LEFT, TOP);\n            let w = textWidth(level.id);\n\n            stroke(0);\n            fill(250, 250, 200);\n\n            beginShape();\n            vertex((level.holeX + offset + 1.83) * SCALE, (level.holeY - 5) * SCALE);\n            vertex((level.holeX + offset + 2.5) * SCALE + w, (level.holeY - 5) * SCALE);\n            vertex((level.holeX + offset + 3) * SCALE + w, (level.holeY - 4) * SCALE);\n            vertex((level.holeX + offset + 2.5) * SCALE + w, (level.holeY - 3) * SCALE);\n            vertex((level.holeX + offset + 1.83) * SCALE, (level.holeY - 3) * SCALE);\n            endShape();\n\n            noStroke();\n            fill(100);\n            text(level.id, (level.holeX + offset + 2.5) * SCALE, (level.holeY - 6) * SCALE)\n\n            stroke(0);\n            fill(150);\n            rect((level.holeX + offset + 1.33) * SCALE, (level.holeY - 5) * SCALE, 0.5 * SCALE, 5 * SCALE);\n        }\n        \n    }\n}\n\nfunction drawLevelStats(level, offset) {\n    if (game.selfBall) {\n        if (game.selfBall.level == level.id) {\n            if (level.stats) {\n                \n                let posY = level.holeY + 5;\n                let posX = level.holeX + offset;\n                if (level.holeY > 50) {\n                    posY = level.holeY + 5;\n                }\n\n                noStroke();\n                fill(0);\n                textSize(3 * SCALE);\n                textAlign(LEFT, TOP);\n                text('strokes', posX * SCALE, posY * SCALE);\n                text('time', (posX + 30) * SCALE, posY * SCALE);\n                \n                console.log(level.stats.sortedByTime);\n                for (let i = 0; i < 10; i++) {\n                    let scoreId = level.stats.sortedByScore[i];\n                    if (scoreId && game.world.balls[scoreId]) {\n                        let ball = game.world.balls[scoreId].ball;\n\n                        fill(ball.color[0], ball.color[1], ball.color[2]);\n                        text('#' + (i + 1) +  ' - ' + ball.clears[Math.floor(level.id / 100) - 1][0] + ' - ' + ball.name, posX * SCALE, (posY + (i + 1) * 1.5 + 1) * SCALE);\n                    }\n\n                    let timeId = level.stats.sortedByTime[i];\n                    if (timeId && game.world.balls[timeId]) {\n                        let ball = game.world.balls[timeId].ball;\n\n                        let time = ball.clears[Math.floor(level.id / 100) - 1][1];\n\n                        let seconds = floor(time) % 60;\n                        let minutes = floor(time / 60) % 60;\n                        let hours = floor(time / 3600) % 60;\n\n                        fill(ball.color[0], ball.color[1], ball.color[2]);\n                        text('#' + (i + 1) +  ' - ' + hours + 'h ' + minutes + 'm ' + seconds + 's' + ' - ' + ball.name, (posX + 30) * SCALE, (posY + (i + 1) * 1.5 + 1) * SCALE);\n                    }\n                    \n                }\n                let myScoreIndex = level.stats.sortedByScore.indexOf(game.selfBall.id);\n                if (myScoreIndex >= 10) {\n                    fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2]);\n                    text('#' + (myScoreIndex + 1) +  ' - ' + game.selfBall.clears[Math.floor(level.id / 100) - 1][0] + ' - ' + game.selfBall.name, posX * SCALE, (posY + 18) * SCALE);\n                }\n                let myTimeIndex = level.stats.sortedByTime.indexOf(game.selfBall.id);\n                if (myTimeIndex >= 10) {\n                    let time = game.selfBall.clears[Math.floor(level.id / 100) - 1][1];\n\n                    let seconds = floor(time) % 60;\n                    let minutes = floor(time / 60) % 60;\n                    let hours = floor(time / 3600) % 60;\n\n                    fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2]);\n                    text('#' + (i + 1) +  ' - ' + hours + 'h ' + minutes + 'm ' + seconds + 's' + ' - ' + ball.name, (posX + 30) * SCALE, (posY + (i + 1) * 1.5 + 1) * SCALE);\n                }\n\n                \n            }\n        }\n    }\n}\n\nfunction drawAim(input, color = [0, 0, 0], transparency = 1) {\n    stroke(color[0], color[1], color[2], min(input.aimPower * 2000, 255 * transparency));\n    noFill();\n\n    let aimSize = min(input.aimPower * 60, 3);\n\n    ellipse(input.aimX * SCALE, input.aimY * SCALE, aimSize * SCALE, aimSize * SCALE);\n    \n    line((input.aimX - input.aimVelX * 1.5) * SCALE, \n        (input.aimY - input.aimVelY * 1.5) * SCALE, \n        (input.aimX - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE);\n    \n    stroke(color[0], color[1], color[2], min(input.aimPower * 2000, 100 * transparency));\n    line((input.aimX + input.aimVelX * 1.5) * SCALE, \n        (input.aimY + input.aimVelY * 1.5) * SCALE, \n        (input.aimX + input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY + input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE);\n    \n    line((input.aimX + input.aimVelY + input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY - input.aimVelX + input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimX - input.aimVelY + input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE, \n        (input.aimY + input.aimVelX + input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE);\n    \n    noStroke();\n    fill(color[0], color[1], color[2], min(input.aimPower * 3000, 255 * transparency));\n    triangle(\n        (input.aimX - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimY - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimX + input.aimVelY * 0.5 + input.aimVelX * 1.5 - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimY - input.aimVelX * 0.5 + input.aimVelY * 1.5 - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimX - input.aimVelY * 0.5 + input.aimVelX * 1.5 - input.aimVelX * max(40 * input.aimPower, 1.5)) * SCALE,\n        (input.aimY + input.aimVelX * 0.5 + input.aimVelY * 1.5 - input.aimVelY * max(40 * input.aimPower, 1.5)) * SCALE,\n    )\n}\n\nfunction draw() {\n    if (!game.started) {\n        background(0);\n\n        noStroke();\n        fill(255);\n\n        textSize(32);\n        textAlign(CENTER, TOP);\n        text(\"Nathan Golfing 2:\", width / 2, height / 2 - 150);\n\n        textSize(64);\n        text(\"Journey\", width / 2, height / 2 - 140);\n\n        if (!isLoggedIn()) {\n            textSize(32);\n\n            if (!getAdjective()) {\n                text(\"describe your journey:\", width / 2, height / 2 - 80);\n                if (temp.adjectiveChoice == undefined) {\n                    temp.adjectiveChoice = floor(random(0, constant.adjectives.length));\n                }\n\n                temp.adjective = constant.adjectives[temp.adjectiveChoice];\n                text(temp.adjective, width / 2, height / 2 - 50);\n                \n                triangle(width / 2 + 10, height / 2 - 15, width / 2 + 20, height / 2 - 10, width / 2 + 10, height / 2 - 5);\n                triangle(width / 2 - 20, height / 2 - 15, width / 2 - 10, height / 2 - 15, width / 2 - 15, height / 2 - 5);\n\n                if (mouseIsPressed) {\n                    if (isWithin(mouseX, mouseY, width / 2 + 10, height / 2 - 15, 10, 10)) {\n                        temp.adjectiveChoice += 1;\n                        if (temp.adjectiveChoice >= constant.adjectives.length) {\n                        temp.adjectiveChoice = 0\n                        }\n                    } else if (isWithin(mouseX, mouseY, width / 2 - 20, height / 2 - 15, 10, 10)) {\n                        localStorage.setItem(\"nathan_golfing_journey_adjective\", temp.adjectiveChoice);\n                    } \n                }\n                return;\n            }\n\n            text(\"This is the \" + getAdjective() + \" journey of: \", width / 2, height / 2 - 80);\n            if (temp.usernameTyped == undefined) {\n                temp.usernameTyped = \"\";\n            }\n\n            if (temp.usernameFailReason) {\n                fill(255, 0, 0);\n                text(temp.usernameFailReason, width / 2, height / 2 + 40);\n            }\n            \n            fill(255);\n            textSize(64);\n            text(temp.usernameTyped + \"_\", width / 2, height / 2);\n\n        } else {\n\n            if (!game.connected) {\n                if (!temp.attemptedToConnect) {\n                    connect();\n                    temp.attemptedToConnect = true;\n                }\n                textSize(32);\n                text(\"Loading...\", width / 2, height / 2);\n\n                if (temp.connectionError) {\n                    fill(255, 0, 0);\n                    text(temp.connectionError, width / 2, height / 2 + 40);\n                }\n            } else {\n                textSize(32);\n                text(\"This is the \" + getAdjective() + \" journey of\", width / 2, height / 2 - 80);\n                textSize(64);\n                if (game.selfBall) {\n                    fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2])\n                } else {\n                    fill(255);\n                }\n                text(game.username, width / 2, height / 2 - 70);\n\n                fill(255);\n                rect(width / 2 - 50, height / 2 + 10, 100, 20);\n                textSize(32);\n                fill(0);\n\n                text(\"play\", width / 2, height / 2 + 4);\n                if (mouseIsPressed && isWithin(mouseX, mouseY, width / 2 - 50, height / 2 + 10, 100, 20)) {\n                    game.started = true;\n                }\n            }\n        }\n\n        return;\n    }\n\n    update();\n\n    background(250);\n    push(); // World\n    \n    translate(OFFSET_X, OFFSET_Y);\n\n    if (game.world != undefined && game.prevWorld != undefined) {\n\n        let subtick = (Date.now() - game.worldUpdateTime) / 50;\n\n        if (game.selfBall) {\n            let prevPlayer = game.prevWorld.balls[game.selfBall.id];\n            let player = game.world.balls[game.selfBall.id];\n            if (player && prevPlayer) {\n                let prevt = prevPlayer.ball.trans, newt = player.ball.trans;\n                let x = newt > prevt ? newt : lerp(prevt, newt, subtick);\n                if (game.selfBall.trans >= 0) {\n                    translate(-game.levels[1].width * ((40 - x) / 40) * SCALE, 0)\n                }\n            }\n            \n        }\n        \n        if (game.levels) {\n\n            let sum = 20 - game.levels[0].width; \n            for (let i = 0; i < 4; i++) {\n                drawLevelFlag(game.levels[i], sum);\n                sum += game.levels[i].width;\n            }\n            \n        }\n\n        temp.offlineBalls = [0, 0, 0, 0];\n\n        push();\n        translate((-game.levels[1].x + 20) * SCALE, 0);\n        for (let id of game.world.sortedBalls) {\n            let player = game.world.balls[id];\n            if (!player.online) {\n                if (game.selfBall) {\n                    let ball = player.ball\n                    if (ball.level >= game.selfBall.level && ball.level <= game.selfBall.level + 2) {\n\n                        stroke(0);\n                        fill(255);\n\n                        let index = ball.level - game.selfBall.level;\n                        if (temp.offlineBalls[index] <= 10) {\n                            let level = game.levels[index];\n                            let posX = level.x + level.holeX, posY = level.holeY - temp.offlineBalls[index] * 2 - 5;\n\n                            let fmtBallName = ball.name + ' (' + ball.score + ')';\n\n                            textSize(3 * SCALE);\n                            textAlign(LEFT, CENTER);\n\n                            rect((posX - 1) * SCALE, (posY - 3) * SCALE, 2 * SCALE + textWidth(fmtBallName), 2 * SCALE);\n\n                            noStroke();\n                            fill(ball.color[0], ball.color[1], ball.color[2]);\n                            text(fmtBallName, posX * SCALE, (posY - 2.5) * SCALE);\n\n                            temp.offlineBalls[index] += 1;\n                        }\n                    }\n                }\n            }\n        }\n\n        for (let id of game.world.sortedBalls) {\n            let player = game.world.balls[id];\n            let prevPlayer = game.prevWorld.balls[id];\n            if (player && prevPlayer) {\n                if (player.online) {\n\n                    let prevBall = prevPlayer.ball, ball = player.ball;\n\n                    let pos = {x: lerp(prevBall.x, ball.x, subtick), y: lerp(prevBall.y, ball.y, subtick)};\n                    let ang = lerp(prevBall.rotation, ball.rotation, subtick);\n                    stroke(0);\n                    fill(ball.color[0], ball.color[1], ball.color[2]);\n                    arc(pos.x * SCALE, pos.y * SCALE, 1 * SCALE, 1 * SCALE, ang, ang + PI);\n                    fill(ball.color[0] * 0.8, ball.color[1] * 0.8, ball.color[2] * 0.8);\n                    arc(pos.x * SCALE, pos.y * SCALE, 1 * SCALE, 1 * SCALE, ang + PI, ang + TWO_PI);\n\n                    noStroke();\n                    textSize(32);\n                    textAlign(CENTER, BOTTOM)\n                    text(ball.name, pos.x * SCALE, (pos.y - 2) * SCALE);\n\n                    if (game.selfBall && ball.id == game.selfBall.id) {\n                        stroke(0);\n                        noFill();\n                        triangle((pos.x) * SCALE, (pos.y - 1) * SCALE, (pos.x - 0.5) * SCALE, (pos.y - 1.5) * SCALE, (pos.x + 0.5) * SCALE, (pos.y - 1.5) * SCALE);\n                    } else {\n                        \n                        if (ball.aiming) {\n\n                            let aimX = ball.aimX;\n                            let aimY = ball.aimY;\n\n                            let aimVelX = lerp(prevBall.aimVelX, ball.aimVelX, subtick);\n                            let aimVelY = lerp(prevBall.aimVelY, ball.aimVelY, subtick);\n\n                            let aimPower = lerp(prevBall.aimPower, ball.aimPower, subtick);\n\n                            let input = {aimX, aimY, aimVelX, aimVelY, aimPower};\n                            drawAim(input, ball.color, 0.5);\n                        }\n                        \n                    }\n                }\n            }\n            \n        }\n\n    }\n    pop();\n\n    if (game.levels) {\n\n        let sum = 20 - game.levels[0].width; \n        for (let i = 0; i < 4; i++) {\n            drawLevel(game.levels[i], sum);\n            sum += game.levels[i].width;\n        }\n        \n        sum = 20 - game.levels[0].width; \n        for (let i = 0; i < 4; i++) {\n            drawLevelStats(game.levels[i], sum);\n            sum += game.levels[i].width;\n        }\n        \n    }\n\n    \n\n    if (game.input.aiming) {\n        if (game.selfBall) {\n            drawAim(game.input, [0, 0, 0], game.selfBall.canStroke && game.selfBall.trans < 0 ? 1 : 0.4);\n        }\n        \n    }\n\n    pop();\n\n    if (game.selfBall) {\n        let selfIndex = game.world.sortedBalls.indexOf(game.selfBall.id);\n\n        textAlign(CENTER, TOP); \n        fill(51);\n\n        textSize(64);\n        fill(game.selfBall.color[0], game.selfBall.color[1], game.selfBall.color[2]);\n        text(game.selfBall.name, width / 2, -8);\n        textSize(32);\n        fill(51);\n        text(game.selfBall.score + ' (avg ' + nf(game.selfBall.score / max(game.selfBall.level, 1), 0, 2) + ')', width / 2, 32);\n        text(game.selfBall.level + ' / 10000 (#' + (selfIndex + 1) + ')', width / 2, 48);\n\n        if (game.selfBall.trans > 0) {\n            let seconds = floor(game.selfBall.time) % 60;\n            let minutes = floor(game.selfBall.time / 60) % 60;\n            let hours = floor(game.selfBall.time / 3600) % 60;\n\n            text(hours + 'h ' + minutes + 'm ' + seconds + 's', width / 2, 64);\n        }\n\n        textSize(32);\n\n        let top = [];\n        let topClosest = [];\n        let bottomClosest = [];\n\n        for (let i = 0; i < 5; i++) {\n            let b = game.world.sortedBalls[i];\n            if (b && i < selfIndex) top.push(b);\n        }\n        for (let i = 1; i <= 5; i++) {\n            let b = game.world.sortedBalls[selfIndex - i];\n            if (b && !top.includes(b)) topClosest.push(b);\n        }\n        for (let i = 1; i <= 10; i++) {\n            let b = game.world.sortedBalls[selfIndex + i];\n            if (b) bottomClosest.push(b);\n        }\n\n        textSize(32);\n\n        textAlign(RIGHT, CENTER);\n        let k = 0;\n        for (let b of top.concat(topClosest.reverse())) {\n            let ball = game.world.balls[b].ball;\n\n            fill(250);\n\n            let nameFmt = '#' + (game.world.sortedBalls.indexOf(b) + 1) + ' ' + ball.name + ' (' + ball.level + '/' + ball.score + ')';\n\n            let w = textWidth(nameFmt);\n\n            stroke(0);\n            let offsetY = top.includes(b) ? 0 : 10;\n            beginShape();\n\n            vertex(width - 15, offsetY + 5 + k * 20);\n            vertex(width - 5, offsetY + 15 + k * 20);\n            vertex(width - 15, offsetY + 25 + k * 20);\n            vertex(width - 25 - w, offsetY + 25 + k * 20);\n            vertex(width - 25 - w, offsetY + 5 + k * 20);\n            \n            endShape(CLOSE);\n\n            noStroke();\n            fill(ball.color[0], ball.color[1], ball.color[2]);\n            text(nameFmt, width - 15, offsetY +  10 + k * 20);\n\n            k++;\n        }\n\n        k = 0;\n        textAlign(LEFT, CENTER);\n        for (let b of bottomClosest) {\n            let ball = game.world.balls[b].ball;\n\n            fill(250);\n\n            let nameFmt = '#' + (game.world.sortedBalls.indexOf(b) + 1) + ' ' + ball.name + ' (' + ball.level + '/' + ball.score + ')';\n\n            let w = textWidth(nameFmt);\n\n            stroke(0);\n            beginShape();\n\n            vertex(15, 5 + k * 20);\n            vertex(5, 15 + k * 20);\n            vertex(15, 25 + k * 20);\n            vertex(25 + w, 25 + k * 20);\n            vertex(25 + w, 5 + k * 20);\n            \n            endShape(CLOSE);\n\n            noStroke();\n            fill(ball.color[0], ball.color[1], ball.color[2]);\n            text(nameFmt, 15, 10 + k * 20);\n\n            k++;\n        }\n    }\n\n    if (game.chat) {\n\n        let k = 0;\n        fill(0, 100);\n        rect(0, height - 20 - game.chat.length * 15, 800, game.chat.length * 15);\n        textAlign(LEFT, BOTTOM);\n        textSize(32);\n        for (let message of game.chat) {\n            fill(message.color[0], message.color[1], message.color[2]);\n            text(message.message, 5, height - 20 - k * 15);\n            k++;\n        }\n\n        if (game.chatting) {\n            fill(51);\n            text(temp.typing + (Math.floor(millis() / 500) % 2 == 0 ? '_' : ''), 5, height - 5);\n        }\n\n    }\n\n}"],"names":[],"version":3,"file":"index.663ab4d4.js.map","sourceRoot":"/__parcel_source_root/"}