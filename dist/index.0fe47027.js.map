{"mappings":"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","sources":["shared.js"],"sourcesContent":["class Ball {\n\n    constructor(id) {\n        this.id = id;\n\n        this.name = \"Ball\";\n        this.level = 0;\n\n        this.color = [0, 0, 0];\n        \n        this.x = 0;\n        this.y = 0;\n        this.xv = 0;\n        this.yv = 0;\n\n        this.rotation = 0;\n\n        this.trans = -1;\n        this.onTee = false;\n\n        this.wasReset = false;\n        this.lastChat = -10000000000;\n\n        this.tpTick = -1;\n        \n        this.canStroke = false;\n        \n        this.health = 100;\n        this.score = 0;\n        this.time = 0;\n        this.clears = new Array(100).fill([Infinity, Infinity]);\n\n        this.aiming = false;\n\n        this.aimX = 0;\n        this.aimY = 0;\n        this.aimVelX = 0;\n        this.aimVelY = 0;\n\n        this.aimPower = 0;\n    }\n\n}\n\nclass Level {\n    \n    constructor(id, x, points, holeX, holeY) {\n        this.id = id;\n        this.x = x;\n\n        this.holeX = holeX;\n        this.holeY = holeY;\n\n        this.points = points;\n\n        this.width = -99999999\n        for (let point of points) {\n            this.width = Math.max(this.width, point.x);\n        }\n    }\n\n}\n\nfunction isWithin(x, y, x1, y1, w, h) {\n    return x > x1 && y > y1 && x < x1 + w && y < y1 + w;\n}\n\n// https://observablehq.com/@bumbeishvili/two-unlimited-lines-intersection-in-javascript\nfunction intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n    // Check if none of the lines are of length 0\n    if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n        return false\n    }\n\n    const denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1))\n\n    // Lines are parallel\n    if (denominator === 0) {\n        return false\n    }\n\n    let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\n    let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\n\n    // Return a object with the x and y coordinates of the intersection\n    let x = x1 + ua * (x2 - x1)\n    let y = y1 + ua * (y2 - y1)\n\n    return { x, y }\n}\n\nfunction intersectPoint(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n    // Check if none of the lines are of length 0\n      if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n          return false\n      }\n  \n      denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1))\n  \n    // Lines are parallel\n      if (denominator === 0) {\n          return false\n      }\n  \n      let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\n      let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\n  \n    // is the intersection along the segments\n      if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n          return false\n      }\n  \n    // Return a object with the x and y coordinates of the intersection\n      let x = x1 + ua * (x2 - x1)\n      let y = y1 + ua * (y2 - y1)\n  \n      return {x, y}\n  }\n\n// https://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction distToSegment(p, v, w) { function sqr(x) { return x * x }\nfunction dist2(v, w) { return sqr(v.x - w.x) + sqr(v.y - w.y) }\nfunction distToSegmentSquared(p, v, w) {\n  var l2 = dist2(v, w);\n  if (l2 == 0) return dist2(p, v);\n  var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n  t = Math.max(0, Math.min(1, t));\n  return dist2(p, { x: v.x + t * (w.x - v.x),\n                    y: v.y + t * (w.y - v.y) });\n} return Math.sqrt(distToSegmentSquared(p, v, w)); }\n\ntry {\n    module.exports = {\n        Ball,\n        Level,\n    }\n} catch (e) {}"],"names":[],"version":3,"file":"index.0fe47027.js.map","sourceRoot":"/__parcel_source_root/"}